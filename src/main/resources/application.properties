eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:5000/eureka
spring.application.name=gateway-service

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator = INFO		
logging.level.org.springframework.cloud.gateway = trace

server.port=2807

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

spring.cloud.gateway.routes[0].id=discovery-server
spring.cloud.gateway.routes[0].uri=https://www.youtube.com/
spring.cloud.gateway.routes[0].predicates[0]=Path=/ankhang/web,/thihue/web
spring.cloud.gateway.routes[0].filters[0]=SetPath=/

#config to redirect url static
spring.cloud.gateway.routes[1].id=discovery-server-static
spring.cloud.gateway.routes[1].uri=https://www.youtube.com/
spring.cloud.gateway.routes[1].predicates[0]=Path=/ankhang/**,/thihue/**

#can use Path=/employee-app/** 
#spring.cloud.gateway.routes[0].id=spring-cloud-client-test-account
#spring.cloud.gateway.routes[0].uri=lb://employee-app/
#spring.cloud.gateway.routes[0].predicates[0]=Path=/employee-app/**

spring.cloud.gateway.routes[2].id=spring-cloud-client-test-account
#some reason when use lb://employee-app/ => the employee-app can not redirect => just hard correct port 8080
#spring.cloud.gateway.routes[2].uri=lb://employee-app/
spring.cloud.gateway.routes[2].uri=http://localhost:8080
spring.cloud.gateway.routes[2].predicates[0]=Path=/employee-app/homeauthen

spring.cloud.gateway.routes[3].id=spring-cloud-client-test-account
spring.cloud.gateway.routes[3].uri=lb://employee-app/
spring.cloud.gateway.routes[3].predicates[0]=Path=/employee-app/home



spring.security.oauth2.client.registration.keycloak.client-id=spring-cloud-client-test-account
spring.security.oauth2.client.registration.keycloak.client-secret=dCPCBA41LI6LxkQFfpQxK0PfP5LYxghl
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:2807/login/oauth2/code/spring-cloud-client-test-account
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-realm
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8181/realms/spring-boot-microservices-realm/protocol/openid-connect/token









